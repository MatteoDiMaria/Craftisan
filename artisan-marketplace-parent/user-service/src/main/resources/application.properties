spring.datasource.url=jdbc:mysql://localhost:3306/user_db?createDatabaseIfNotExist=true
spring.datasource.username=your_mysql_username # Placeholder - replace with actual username
spring.datasource.password=your_mysql_password # Placeholder - replace with actual password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Jersey configuration
spring.jersey.application-path=/api # Base path for all JAX-RS resources
# spring.jersey.type=filter # or "servlet" - "filter" is often preferred for Spring Boot

# Server port (optional, defaults to 8080)
# server.port=8081

# Logging (optional, for more detailed output)
# logging.level.org.springframework.web=DEBUG
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# For Spring Security, if not already picked up (though @EnableWebSecurity should handle it)
# Ensure Spring Security is on the classpath (it is, via spring-boot-starter-security)
# spring.security.filter.dispatcher-types = REQUEST, ASYNC, ERROR, FORWARD
# To make H2 console accessible if you were using it (not in this setup)
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console
# spring.h2.console.settings.web-allow-others=false
# spring.security.ignored= /h2-console/** , /swagger-ui.html , /v2/api-docs # etc.
# For this specific setup, we are permitting /users/register and /users/login in SecurityConfig
# so no specific ignore patterns needed here for those.
